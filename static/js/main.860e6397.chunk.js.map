{"version":3,"sources":["reducers/CartReducer.ts","contexts/CartContext.ts","utils/miscConstants.tsx","components/common/Logo/Logo.tsx","utils/styles/Constants.ts","components/Header/Navigation/Navigation.styles.ts","components/Header/Navigation/Navigation.tsx","components/Header/Header.styles.ts","components/Header/Header.tsx","components/Footer/Footer.styles.ts","components/Footer/Footer.tsx","utils/styles/Animations.ts","components/ProductCard/ProductCard.styles.ts","components/common/Image/Image.tsx","components/ProductCard/ProductCard.tsx","reducers/SortReducer.ts","contexts/SortContext.ts","components/ProductList/ProductList.styles.ts","components/common/Select/SelectItem/SelectItem.styles.ts","components/common/Select/SelectItem/SelectItem.tsx","components/common/Select/Select.styles.ts","components/common/Select/Select.tsx","components/ProductList/ProductList.tsx","components/ProductItem/ProductItem.styles.ts","components/ProductItem/ImageThumbs/ImageThumbs.tsx","components/Size/Size.styles.ts","components/Size/Size.tsx","components/common/Button/Button.styles.ts","components/common/Button/Button.tsx","components/common/Quantity/Quantity.styles.ts","components/common/Quantity/Quantity.tsx","utils/toastr.tsx","components/ProductItem/ProductItem.tsx","utils/styles/GlobalStyle.ts","components/App/App.styles.ts","components/Cart/ProductTable/ProductTable.styles.ts","components/Cart/ProductTable/ProductTableHeader/ProductTableHeader.tsx","components/Cart/ProductTable/ProductTable.tsx","components/Cart/Cart.styles.ts","components/Cart/Cart.tsx","components/App/App.tsx","index.tsx"],"names":["initialCartState","items","cartReducer","state","action","item","payload","itemIndex","type","findIndex","cartItem","id","productSize","updateCart","data","localStorage","setItem","JSON","stringify","clearCart","removeItem","cartContent","undefined","productQty","productTotalPrice","price","product","push","filter","index","length","CartContext","createContext","cartState","cartDispatch","CartContextProvider","Consumer","Provider","miscConstants","Logo","className","src","alt","CONTENT_WIDTHS","COLORS","FONTS","SCREEN_SIZE","DEVICE_MIN_WIDTH","mobileS","mobileM","mobileL","tablet","laptopS","laptopM","laptopL","desktopS","desktopL","DEVICE_MAX_WIDTH","SHADOWS","TIMES","NavigationWrapper","styled","nav","Navigation","useState","cartItemsCount","setCartItemsCount","cartContext","useContext","useEffect","_count","reduce","acc","curr","to","HeaderWrapper","header","Header","onLoad","storedCart","getItem","parse","FooterWrapper","footer","Footer","fadeIn","keyframes","ProductCardWrapper","div","Image","image","imageClass","productItemName","onError","evt","currentTarget","ProductCard","productItem","images","name","manufacturer","initialSortState","sort","criteria","direction","sortReducer","SortContext","sortState","sortDispatch","SortContextProvider","ProductListWrapper","SelectItemWrapper","li","attrs","props","SelectItem","selectItemKey","selectItemClassName","selectItem","onSelectChange","isSelected","onClick","item-key","SelectListWrapper","ul","Select","selectListClassName","selectListItems","selectedOption","map","key","text","ProductList","productItems","sortContext","isOpen","setIsOpen","setSelectedOption","sortCriteria","setSortCriteria","sortDirection","setSortDirection","getSelectedItem","clickedItem","getAttribute","sortProductList","p1","p2","lastChild","innerText","selectedItem","localStorageSortData","ProductItemWrapper","ImageThumbs","handleImageThumbClick","defaultChecked","SizeWrapper","Size","sizes","handleSizeSelection","size","htmlFor","ButtonWrapper","button","disabled","Button","dataTestId","isDisabled","btnText","btnIcon","data-testid","QuantityWrapper","span","Quantity","qty","handleDecrement","handleIncrement","toastOptions","closeButton","newestOnTop","timeOut","progressBar","showToast","toastType","toastData","toastr","message","title","ProductItem","match","params","db","products","targetProduct","setProductSize","imageToShow","setImageToShow","setProductQty","description","document","getElementById","classList","remove","Array","from","getElementsByClassName","elem","add","GlobalStyle","createGlobalStyle","AppWrapper","ProductTableWrapper","ProductTableHeader","ProductTable","cart","handleRemoveFromCart","clearedProduct","toFixed","CartWrapper","Cart","timesSold","App","useReducer","cartContextValues","sortContextValues","value","exact","path","render","component","client","QueryClient","ReactDOM","QueryClientProvider"],"mappings":"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","file":"static/js/main.860e6397.chunk.js","sourcesContent":["import ICartActions from '../utils/interfaces/ICartActions';\r\nimport ICartItem from './../utils/interfaces/ICartItem';\r\nimport ICartState from './../utils/interfaces/ICartState';\r\n\r\nexport const initialCartState: ICartState = {\r\n    items: []\r\n}\r\n\r\nexport const cartReducer = (state: ICartState, action: ICartActions) => {\r\n    let item = action.payload;\r\n    let items = state.items;\r\n\r\n    let itemIndex: number = -1;\r\n    if (item) {\r\n        if (action.type === 'ADD_TO_CART') {\r\n            itemIndex = items.findIndex((cartItem) => {\r\n                return (cartItem.id === item.id && cartItem.productSize === item.productSize);\r\n            })\r\n        } else {\r\n            itemIndex = items.findIndex((cartItem) => {\r\n                return (cartItem.id === item.id && cartItem.productSize === item.productSize);\r\n            });\r\n        }\r\n    }\r\n\r\n    const updateCart = (data: ICartItem[]) => {\r\n        localStorage.setItem(\"tsCartData\", JSON.stringify(data));\r\n    }\r\n\r\n    const clearCart = () => {\r\n        localStorage.removeItem(\"tsCartData\");\r\n    }\r\n\r\n    switch (action.type) {\r\n        case 'LOAD_CART_FROM_STORAGE':\r\n            const cartContent = action.cartContent;\r\n            // console.log(cartContent);\r\n            if (cartContent !== undefined) {\r\n                items = cartContent;\r\n            }\r\n            return { ...state, items };\r\n\r\n        case 'ADD_TO_CART':\r\n            if (itemIndex > -1) {\r\n                items[itemIndex].productQty += item.productQty;\r\n                items[itemIndex].productTotalPrice = (items[itemIndex].productQty * items[itemIndex].price);\r\n                updateCart(items);\r\n                return { ...state, items }\r\n            } else {\r\n                const product = { ...action.payload };\r\n                const productTotalPrice: number = product.price * product.productQty;\r\n                product.productTotalPrice = productTotalPrice;\r\n                items.push(product);\r\n                updateCart(items);\r\n                return { ...state, items };\r\n            }\r\n\r\n        case 'INCREMENT':\r\n            items[itemIndex].productQty += 1;\r\n            items[itemIndex].productTotalPrice = (items[itemIndex].productQty * items[itemIndex].price);\r\n            updateCart(items);\r\n            return { ...state, items };\r\n\r\n        case 'DECREMENT':\r\n            if (items[itemIndex].productQty > 1) {\r\n                items[itemIndex].productQty -= 1;\r\n                items[itemIndex].productTotalPrice = (items[itemIndex].productQty * items[itemIndex].price);\r\n            }\r\n            updateCart(items);\r\n            return { ...state, items };\r\n\r\n        case 'REMOVE_FROM_CART':\r\n            items = items.filter((item, index) => {\r\n                if (index !== itemIndex) {\r\n                    return item;\r\n                }\r\n                return false;\r\n            })\r\n\r\n            if (items.length > 0) {\r\n                updateCart(items);\r\n            } else {\r\n                clearCart();\r\n            }\r\n\r\n            return { ...state, items };\r\n\r\n        case 'CHECKOUT':\r\n            items = [];\r\n            clearCart();\r\n            return { items };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { createContext } from 'react';\r\nimport ICartContextProps from './../utils/interfaces/Props/ICartContextProps';\r\nimport { initialCartState } from './../reducers/CartReducer';\r\n\r\nconst CartContext = createContext<ICartContextProps>({\r\n    cartState: initialCartState,\r\n    cartDispatch: () => { }\r\n});\r\n\r\nexport const CartContextConsumer = CartContext.Consumer;\r\nexport const CartContextProvider = CartContext.Provider;\r\n\r\nexport default CartContext;","export const miscConstants = {\r\n    baseUrl: \"/react-store-typescript\"\r\n}","//Import external libraries\r\n\r\n//Import internal libraries\r\nimport { miscConstants } from '../../../utils/miscConstants';\r\n\r\n//Import components\r\n\r\n//Import styles\r\n\r\nconst Logo = () => {\r\n    return <div className=\"site-logo\">\r\n        <img\r\n            className=\"logo-image\"\r\n            src={`${miscConstants.baseUrl}/static/images/logo.png`}\r\n            alt=\"Compass Store Logo\"\r\n        />\r\n        <div className=\"logo-wrapper\">\r\n            <h2 className=\"logo-text\">Compass Shop</h2>\r\n            <h6 className=\"logo-subtext\">for DEDICATED fans</h6>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Logo;\r\n","\r\nexport const CONTENT_WIDTHS = {\r\n    mainContent_Width_Default: '64vw',\r\n    mainContent_Width_Medium: '74vw',\r\n    mainContent_Width_Small: '92vw',\r\n    componentWidth_Default: '32%',\r\n    componentWidth_Medium: '48%',\r\n    componentWidth_Small: '100%',\r\n}\r\n\r\nexport const COLORS = {\r\n    //Colors in Header and Footer\r\n    navigation_Text_Default: 'rgb(255, 255, 255)',\r\n    navigation_Text_Highlighted: 'rgb(133, 32, 0)',\r\n    navigation_Background: 'rgb(15, 76, 129)',\r\n    navigation_Background_Alpha: 'rgba(15, 76, 129, 0.5)',\r\n    //Colors in main\r\n    main_Text_Default: 'rgb(15, 76, 129)',\r\n    main_Text_Default_Alpha: 'rgba(15, 76, 129, 0.5)',\r\n    main_Text_Highlighted: 'rgb(133, 32, 0)',\r\n    main_Text_Reversed: 'rgb(255, 255, 255)',\r\n    main_Background_Main: 'rgb(255, 255, 255)',\r\n    main_Background_Highlighted: 'rgb(133, 32, 0)',\r\n    main_Background_Reversed: 'rgb(15, 76, 129)',\r\n    main_Background_Reversed_Alpha25: 'rgba(15, 76, 129, 0.25)',\r\n    main_Background_Reversed_Alpha50: 'rgba(15, 76, 129, 0.50)',\r\n    //Color in outlines\r\n    outlineBorderMain: 'rgb(15, 76, 129)',\r\n    outlineAlternative: 'rgb(133, 32, 0)',\r\n    //Colors in borders\r\n    borderMain: 'rgb(15, 76, 129)',\r\n    ButtonDefault: 'rgb(15, 76, 129)',\r\n    ButtonDisabled_Alpha25: 'rgba(15, 76, 129, 0.25)',\r\n    ButtonDisabled_Alpha50: 'rgba(15, 76, 129, 0.50)',\r\n}\r\n\r\nexport const FONTS = {\r\n    fontFamilyHeaders: 'Ubuntu',\r\n    fontFamilyBody: 'Open Sans',\r\n    fontSizeBodyNormal: '12px',\r\n    fontSizeBodyLarge: '14px',\r\n    fontSizeBodyLARGE: '16px',\r\n    fontSizeBodyHuge: '18px',\r\n}\r\n\r\nconst SCREEN_SIZE = {\r\n    mobileS: '300px',\r\n    mobileM: '450px',\r\n    mobileL: '600px',\r\n    tablet: '768px',\r\n    laptopS: '1024px',\r\n    laptopM: '1280px',\r\n    laptopL: '1440px',\r\n    desktopS: '1600px',\r\n    desktopL: '2560px'\r\n}\r\n\r\nexport const DEVICE_MIN_WIDTH = {\r\n    mobileS: `(min-width: ${SCREEN_SIZE.mobileS})`,\r\n    mobileM: `(min-width: ${SCREEN_SIZE.mobileM})`,\r\n    mobileL: `(min-width: ${SCREEN_SIZE.mobileL})`,\r\n    tablet: `(min-width: ${SCREEN_SIZE.tablet})`,\r\n    laptopS: `(min-width: ${SCREEN_SIZE.laptopS})`,\r\n    laptopM: `(min-width: ${SCREEN_SIZE.laptopM})`,\r\n    laptopL: `(min-width: ${SCREEN_SIZE.laptopL})`,\r\n    desktopS: `(min-width: ${SCREEN_SIZE.desktopS})`,\r\n    desktopL: `(min-width: ${SCREEN_SIZE.desktopL})`\r\n};\r\n\r\nexport const DEVICE_MAX_WIDTH = {\r\n    mobileS: `(max-width: ${SCREEN_SIZE.mobileS})`,\r\n    mobileM: `(max-width: ${SCREEN_SIZE.mobileM})`,\r\n    mobileL: `(max-width: ${SCREEN_SIZE.mobileL})`,\r\n    tablet: `(max-width: ${SCREEN_SIZE.tablet})`,\r\n    laptopS: `(max-width: ${SCREEN_SIZE.laptopS})`,\r\n    laptopM: `(max-width: ${SCREEN_SIZE.laptopM})`,\r\n    laptopL: `(max-width: ${SCREEN_SIZE.laptopL})`,\r\n    desktopS: `(max-width: ${SCREEN_SIZE.desktopS})`,\r\n    desktopL: `(max-width: ${SCREEN_SIZE.desktopL})`\r\n};\r\n\r\nexport const SHADOWS = {\r\n    shadowColorLight: 'rgba(15, 76, 129, 0.25)',\r\n    shadowColorDark: 'rgba(15, 76, 129, 0.75',\r\n    shadowShapeMain: '0px 0px 5px 2px',\r\n}\r\n\r\nexport const TIMES = {\r\n    timeTransitionMain: '0.2s',\r\n}","import styled from 'styled-components';\r\n\r\nimport { FONTS, COLORS } from './../../../utils/styles/Constants';\r\n\r\nconst NavigationWrapper = styled.nav`\r\n    .nav-list{\r\n        list-style: none;\r\n        list-style-position: outside;\r\n        display: flex;\r\n    }\r\n\r\n    .nav-item{\r\n        line-height: 6em;\r\n        margin: 0;\r\n        padding: 0;\r\n\r\n    &.cart{\r\n        position: relative;\r\n    }\r\n    }\r\n\r\n    .cart-icon{\r\n        font-size: 2em;\r\n    }\r\n\r\n    .cart-icon:before{\r\n        display: block;\r\n        font-weight: bold;\r\n        font-family: \"Font Awesome 5 Free\";\r\n        content: \"\\f07a\";\r\n    }\r\n\r\n    .cart-items{\r\n        position: absolute;\r\n        top: 1.2em;\r\n        left: 1.2em;\r\n        padding: 0.2em 0.5em 0.4em 0.5em;\r\n        border-radius: 50%;\r\n        line-height: 1;\r\n        font-size: 0.5em;\r\n        font-family: ${FONTS.fontFamilyHeaders};\r\n        font-weight: bold;\r\n        background-color: ${COLORS.main_Background_Highlighted};\r\n    }\r\n`;\r\n\r\nexport default NavigationWrapper;","import { useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport NavigationWrapper from './Navigation.styles';\r\nimport CartContext from './../../../contexts/CartContext';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { miscConstants } from '../../../utils/miscConstants';\r\n\r\nconst Navigation = () => {\r\n    const [cartItemsCount, setCartItemsCount] = useState<number>(0);\r\n\r\n    const cartContext = useContext(CartContext);\r\n\r\n    useEffect(() => {\r\n        let _count = 0;\r\n\r\n        _count = cartContext.cartState.items.reduce((acc, curr) => {\r\n            return acc + curr.productQty;\r\n        }, 0);\r\n\r\n        if (_count === cartItemsCount) {\r\n            return\r\n        };\r\n\r\n        setCartItemsCount(_count);\r\n    }, [cartContext, cartItemsCount]);\r\n\r\n    return <NavigationWrapper>\r\n        <ul className=\"nav-list\">\r\n            <li className=\"nav-item cart\">\r\n                {/* <Link to={`/cart`}> */}\r\n                <Link to={`${miscConstants.baseUrl}/cart`}>\r\n                    {/* May be make a dedicated component for the cart link */}\r\n                    <span className=\"cart-icon\">\r\n                        <p className=\"cart-items\">{cartItemsCount}</p>\r\n                    </span>\r\n                </Link>\r\n            </li>\r\n        </ul>\r\n    </NavigationWrapper>\r\n}\r\n\r\nexport default Navigation;","import styled from 'styled-components';\r\n\r\nimport { COLORS } from '../../utils/styles/Constants';\r\n\r\nconst HeaderWrapper = styled.header`\r\n    .site-header {\r\n        padding: 1em 0;\r\n        display: flex;\r\n        justify-content: space-between;\r\n\r\n        a{\r\n            color: ${COLORS.navigation_Text_Default}\r\n        }\r\n\r\n        .site-logo {\r\n            display: flex;\r\n            align-items: center;\r\n            height: 6em;\r\n\r\n            .logo-image {\r\n                height: 100%;\r\n                margin: 1em 1em 1em 0;\r\n            }\r\n\r\n            .logo-text {\r\n                margin-bottom: 0.1em;\r\n                line-height: 1;\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport default HeaderWrapper;","import { useContext } from 'react';\r\nimport CartContext from './../../contexts/CartContext';\r\n\r\n//Import external libraries\r\nimport { Link } from 'react-router-dom';\r\n\r\n//Import internal libraries\r\nimport { miscConstants } from '../../utils/miscConstants';\r\n\r\n//Import components\r\nimport Logo from './../common/Logo/Logo';\r\nimport Navigation from './Navigation/Navigation';\r\n\r\n//Import styles\r\nimport HeaderWrapper from './Header.styles';\r\n\r\nconst Header = () => {\r\n    const cartContext = useContext(CartContext);\r\n\r\n    const handleOnLoad = () => {\r\n        const storedCart = localStorage.getItem(\"tsCartData\");\r\n        if (storedCart !== null) {\r\n            cartContext.cartDispatch({\r\n                type: \"LOAD_CART_FROM_STORAGE\",\r\n                payload: JSON.parse(storedCart),\r\n                cartContent: JSON.parse(storedCart),\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <HeaderWrapper>\r\n            <div className='site-header' onLoad={handleOnLoad}>\r\n                {/* <Link to=\"/\"> */}\r\n                <Link to={`${miscConstants.baseUrl}`}>\r\n                    <Logo />\r\n                </Link>\r\n                <Navigation />\r\n            </div>\r\n        </HeaderWrapper>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import styled from 'styled-components';\r\n\r\n// import { COLORS } from '../../utils/styles/Constants';\r\n\r\nexport const FooterWrapper = styled.footer`\r\n    height: 5em;\r\n    .site-footer:hover{\r\n        color: red;\r\n    }\r\n`;","//Import external libraries\r\n// import { Link } from 'react-router-dom';\r\n\r\n//Import internal libraries\r\nimport { miscConstants } from '../../utils/miscConstants';\r\n\r\n//Import components\r\n// import Logo from './../common/Logo/Logo';\r\n\r\n//Import styles\r\nimport { FooterWrapper } from './Footer.styles';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <FooterWrapper>\r\n            <div className='site-footer'>\r\n                {/* <Link to={`${miscConstants.baseUrl}`}>\r\n                        <Logo />\r\n                    </Link> */}\r\n                    Footer\r\n                </div>\r\n        </FooterWrapper>\r\n    );\r\n}\r\n\r\nexport default Footer;","import { keyframes } from 'styled-components';\r\n\r\nexport const fadeIn = keyframes`\r\n    from {\r\n        opacity: 0;\r\n    }\r\n\r\n    to {\r\n        opacity: 1;\r\n    }\r\n`;\r\n\r\nexport const fadeOut = keyframes`\r\n    from {\r\n        opacity: 1;\r\n    }\r\n\r\n    to {\r\n        opacity: 0;\r\n    }\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nimport { CONTENT_WIDTHS, SHADOWS, DEVICE_MAX_WIDTH, COLORS } from '../../utils/styles/Constants';\r\nimport { fadeIn } from './../../utils/styles/Animations';\r\n\r\nconst ProductCardWrapper = styled.div`\r\n    width: ${CONTENT_WIDTHS.componentWidth_Default};\r\n    margin-bottom: 4%;\r\n    box-shadow: ${SHADOWS.shadowShapeMain} ${SHADOWS.shadowColorLight};\r\n\r\n    @media ${DEVICE_MAX_WIDTH.tablet}{\r\n        width: ${CONTENT_WIDTHS.componentWidth_Medium};\r\n    }\r\n\r\n    @media ${DEVICE_MAX_WIDTH.mobileL}{\r\n        width: ${CONTENT_WIDTHS.componentWidth_Small};\r\n    }\r\n\r\n    .card-inner {\r\n        height: 100%;\r\n        display: flex;\r\n        flex-direction: column;\r\n        position: relative;\r\n        \r\n        & .details {\r\n            display: none;\r\n            padding: 0;\r\n            margin: 0;\r\n            position: absolute;\r\n            font-weight: bold;\r\n            font-size: 2em;\r\n            color: white;\r\n            text-transform: uppercase;\r\n            letter-spacing: 0.2em;\r\n            top: 0;\r\n            right: 0;\r\n            bottom: 0;\r\n            left: 0;\r\n            /* opacity: 0; */\r\n            /* transition: opacity 0.2s linear; */\r\n        }\r\n\r\n        &:hover .details {\r\n            animation: ${fadeIn} 0.2s;\r\n            /* animation-direction: alternate; */\r\n            /* animation-fill-mode: both; */\r\n            display: flex;\r\n            justify-content: space-around;\r\n            align-items: center;\r\n            background: rgba(15, 76, 129, 0.50);\r\n            z-index: 100;\r\n            /* opacity: 1; */\r\n        }        \r\n    }\r\n\r\n    .card-media {\r\n        position: relative;\r\n        overflow: hidden;\r\n    }\r\n\r\n    .card-media:after {\r\n        display: block;\r\n        content: '';\r\n        padding-top: 100%;\r\n    }\r\n\r\n    .card-media img {\r\n        position: absolute;\r\n        top: 50%;\r\n        left: 0;\r\n        width: 100%;\r\n        transform: translateY(-50%);\r\n    }\r\n\r\n    .card-meta,\r\n    .card-footer {\r\n        padding: 0 2em;\r\n    }\r\n\r\n    .card-meta {\r\n        color: ${COLORS.main_Text_Default};\r\n    }\r\n\r\n    .card-footer {\r\n        margin-top: auto;\r\n        padding-bottom: 1em;\r\n        color: ${COLORS.main_Background_Highlighted};\r\n    }\r\n\r\n    a {\r\n        color: ${COLORS.main_Text_Default};\r\n    }\r\n`;\r\n\r\nexport default ProductCardWrapper;","import { SyntheticEvent } from 'react';\r\n// import { ProductItemType } from '../../../utils/types/types';\r\n// import IProductItem from './../../../utils/interfaces/IProductItem';\r\nimport IImageProps from './../../../utils/interfaces/Props/IImageProps';\r\nimport { miscConstants } from './../../../utils/miscConstants';\r\n\r\n// type Props = {\r\n//     image: string;\r\n//     imageClass: string;\r\n//     productItemName: string;\r\n// }\r\n\r\nconst Image: React.FC<IImageProps> = ({ image, imageClass, productItemName }) => {\r\n\r\n    const handleImageLoadError = (evt: SyntheticEvent<HTMLImageElement, Event>) => {\r\n        // evt.currentTarget.src = `/static/images/error.png`;\r\n        evt.currentTarget.src = `${miscConstants.baseUrl}/static/images/error.png`;\r\n    }\r\n\r\n    return <span className={imageClass}>\r\n        <img\r\n            // src={`/static/images/` + image}\r\n            src={`${miscConstants.baseUrl}/static/images/` + image}\r\n            alt={`${productItemName}`}\r\n            onError={handleImageLoadError}\r\n\r\n        />\r\n\r\n    </span>\r\n}\r\n\r\nexport default Image;","import { Link } from \"react-router-dom\";\r\n\r\nimport { miscConstants } from './../../utils/miscConstants';\r\n// import { CardItemType } from '../../utils/types/types';\r\n// import { ProductItemType } from '../../utils/types/types';\r\nimport IProductItem from './../../utils/interfaces/IProductItem';\r\nimport ProductCardWrapper from './ProductCard.styles';\r\nimport Image from './../common/Image/Image';\r\n\r\n// import ICardItem from './../../utils/interfaces/ICardItem';\r\n\r\ntype Props = {\r\n    productItem: IProductItem;\r\n}\r\n\r\nconst ProductCard: React.FC<Props> = ({ productItem }) => {\r\n    return <ProductCardWrapper>\r\n        {/* <Link className=\"product-card\" to={`/products/${productItem.id}`}> */}\r\n        <Link className=\"product-card\" to={`${miscConstants.baseUrl}/products/${productItem.id}`}>\r\n            <span className=\"card-inner\">\r\n                <div className=\"details\">\r\n                    Details\r\n                </div>\r\n                <Image image={productItem.images[0]} imageClass=\"card-media\" productItemName={productItem.name} />\r\n                <span className=\"card-meta\">\r\n                    <p className=\"manufacturer\">{productItem.manufacturer}</p>\r\n                    <h6>{productItem.name}</h6>\r\n                </span>\r\n                <span className=\"card-footer\">\r\n                    <h6 className=\"price\">{productItem.price} DKK</h6>\r\n                </span>\r\n            </span>\r\n        </Link >\r\n    </ProductCardWrapper>\r\n}\r\n\r\nexport default ProductCard;","import ISortState from './../utils/interfaces/ISortState';\r\nimport ISortActions from './../utils/interfaces/ISortActions';\r\n\r\nexport const initialSortState: ISortState = {\r\n    sort: {\r\n        criteria: '',\r\n        direction: ''\r\n    }\r\n}\r\n\r\nexport const sortReducer = (state: ISortState, action: ISortActions) => {\r\n\r\n    const saveSortData = (data: ISortState) => {\r\n        localStorage.setItem('tsSortData', JSON.stringify(data));\r\n    }\r\n\r\n    switch (action.type) {\r\n        case 'LOAD_SORT_FROM_STORAGE':\r\n            state.sort = action.payload.sort;\r\n            return {\r\n                sort: state.sort\r\n            }\r\n\r\n        case 'SORT':\r\n            state.sort.criteria = action.payload.sort.criteria;\r\n            state.sort.direction = action.payload.sort.direction;\r\n            saveSortData(state);\r\n            return {\r\n                sort: state.sort\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { createContext } from 'react';\r\nimport ISortContextProps from './../utils/interfaces/Props/ISortContextProps';\r\nimport { initialSortState } from './../reducers/SortReducer';\r\n\r\nconst SortContext = createContext<ISortContextProps>({\r\n    sortState: initialSortState,\r\n    sortDispatch: () => { }\r\n});\r\n\r\nexport const SortContextConsumer = SortContext.Consumer;\r\nexport const SortContextProvider = SortContext.Provider;\r\n\r\nexport default SortContext;","import styled from 'styled-components';\r\nimport { CONTENT_WIDTHS, COLORS, SHADOWS, DEVICE_MAX_WIDTH } from './../../utils/styles/Constants';\r\n\r\nexport const ProductListWrapper = styled.div`\r\n    position: relative;\r\n\r\n    .sort-select-container{\r\n        background-color: ${COLORS.main_Background_Main};\r\n        position: absolute;\r\n        z-index: 200;\r\n        cursor: pointer;\r\n        width: ${CONTENT_WIDTHS.componentWidth_Default};\r\n        @media ${DEVICE_MAX_WIDTH.tablet}{        \r\n        &{\r\n            width: ${CONTENT_WIDTHS.componentWidth_Medium};\r\n        }\r\n    }\r\n\r\n        @media ${DEVICE_MAX_WIDTH.mobileL}{\r\n        &{\r\n            width: ${CONTENT_WIDTHS.componentWidth_Small};\r\n        }\r\n    }\r\n\r\n        .sort-select-header, .sort-select-list{\r\n            box-shadow: ${SHADOWS.shadowShapeMain} ${SHADOWS.shadowColorLight};\r\n        }\r\n\r\n        .sort-select-header{\r\n            margin: 0;\r\n            padding: 0.5em 0.5em;\r\n\r\n            &:after{\r\n                font-family: 'Font Awesome 5 Free';\r\n                content: '\\f078';\r\n                font-weight: bold;\r\n                position: absolute;\r\n                right: 0.5em;\r\n            }\r\n\r\n            &.opened:after{\r\n                content: '\\f077';\r\n            }\r\n        }\r\n\r\n        .sort-select-list{\r\n            list-style: none;\r\n            list-style-position: outside;\r\n            border-top: 1px solid ${COLORS.borderMain};\r\n        }\r\n\r\n        .sort-select-item{\r\n            padding: 0.5em 0.5em;\r\n            \r\n            &:before{\r\n                font-family: 'Font Awesome 5 Free';\r\n                content: '\\f111';\r\n                padding-right: 0.5em;\r\n            }\r\n        }\r\n\r\n        .sort-select-item:hover{\r\n            color: ${COLORS.main_Text_Highlighted};\r\n            background-color: ${COLORS.main_Background_Reversed_Alpha50};\r\n        }\r\n\r\n        .sort-select-item:hover:before{\r\n            content: '\\f192';\r\n        }\r\n\r\n        .sort-select-item.selected{\r\n            color: ${COLORS.main_Text_Highlighted};\r\n            background-color: ${COLORS.main_Background_Reversed_Alpha25};\r\n            \r\n            &:before{\r\n                content: '\\f192';\r\n            }\r\n\r\n            &:hover{\r\n                background-color: ${COLORS.main_Background_Reversed_Alpha50};\r\n            }\r\n        }\r\n    }\r\n\r\n    .product-list {\r\n        flex-basis: 100%;\r\n        margin-top: 6em;\r\n        display: flex;\r\n        justify-content: space-between;\r\n        flex-wrap: wrap;\r\n\r\n        &::after {\r\n            content: \"\";\r\n            width: 32%;\r\n        }\r\n\r\n        .list-title {\r\n            width: 100%;\r\n            font-weight: bold;\r\n            margin-bottom: 0.5em;\r\n        }   \r\n    }\r\n`;","import styled from 'styled-components';\r\n// import { COLORS } from './../../../../utils/styles/Constants';\r\n\r\nconst SelectItemWrapper = styled.li.attrs((props) => ({\r\n    className: props.className\r\n}))`\r\n    \r\n`;\r\n\r\nexport default SelectItemWrapper;","import SelectItemWrapper from './SelectItem.styles';\r\n\r\ntype Props = {\r\n    selectItemKey: string,\r\n    selectItemClassName: string,\r\n    selectItem: string,\r\n    onSelectChange(evt: React.SyntheticEvent<HTMLLIElement>): void,\r\n    isSelected: boolean\r\n}\r\n\r\nconst SelectItem: React.FC<Props> = ({ selectItemKey, selectItemClassName, selectItem, onSelectChange, isSelected }) => {\r\n    // console.log(selectItem + isSelected);\r\n    return (\r\n        <SelectItemWrapper\r\n            key={selectItemKey}\r\n\r\n            className={`${selectItemClassName} ${isSelected ? \"selected\" : \"\"}`}\r\n            onClick={onSelectChange}\r\n        >\r\n            <span className=\"list-item\" item-key={selectItemKey}>{selectItem}</span>\r\n\r\n        </SelectItemWrapper>\r\n    )\r\n}\r\n\r\nexport default SelectItem;","import styled from 'styled-components';\r\n\r\nconst SelectListWrapper = styled.ul.attrs((props) => ({\r\n    className: props.className\r\n}))`\r\n    cursor: pointer;\r\n`;\r\n\r\nexport default SelectListWrapper;","// import { useState } from 'react';\r\nimport SelectItem from './SelectItem/SelectItem';\r\nimport SelectWrapper from './Select.styles';\r\nimport ISelectItem from './../../../utils/interfaces/ISelectItem';\r\n\r\ntype Props = {\r\n    selectListClassName: string,\r\n    selectItemClassName: string,\r\n    selectListHeader?: string,\r\n    selectListItems: ISelectItem[],\r\n    onSelectChange(evt: React.SyntheticEvent<HTMLLIElement>): void,\r\n    selectedOption: string,\r\n}\r\n\r\nconst Select: React.FC<Props> = ({ selectListClassName, selectItemClassName, selectListItems, onSelectChange, selectedOption }) => {\r\n\r\n    return <SelectWrapper className={selectListClassName}>\r\n        {\r\n            selectListItems.map((item) => (\r\n                <SelectItem\r\n                    key={item.text}\r\n                    selectItemClassName={selectItemClassName}\r\n                    selectItemKey={item.key} selectItem={item.text}\r\n                    onSelectChange={onSelectChange}\r\n                    isSelected={selectedOption === item.text}\r\n                />\r\n            ))\r\n        }\r\n    </SelectWrapper>\r\n}\r\n\r\nexport default Select;","import { useState, useContext, useEffect } from 'react';\r\nimport IProductItem from '../../utils/interfaces/IProductItem';\r\nimport ProductCard from '../ProductCard/ProductCard';\r\n// import { ProductItemType } from '../../utils/types/types';\r\n\r\n\r\nimport SortContext from '../../contexts/SortContext';\r\n\r\nimport { ProductListWrapper } from './ProductList.styles';\r\nimport Select from './../common/Select/Select';\r\nimport ISelectItem from './../../utils/interfaces/ISelectItem';\r\nimport SelectItem from './../common/Select/SelectItem/SelectItem';\r\nimport ISortState from './../../utils/interfaces/ISortState';\r\n\r\ntype Props = {\r\n    productItems: IProductItem[]\r\n}\r\n\r\nconst ProductList: React.FC<Props> = ({ productItems }) => {\r\n    const sortContext = useContext(SortContext);\r\n\r\n    // const selectListItems = ['Popularity (Desc)', 'Popularity (Asc)', 'Price (Desc)', 'Price (Asc)'];\r\n    const selectListItems: ISelectItem[] = [\r\n        {\r\n            text: \"Popularity (Desc)\",\r\n            key: \"timesSoldDesc\",\r\n            criteria: \"timesSold\",\r\n            direction: \"Desc\"\r\n        },\r\n        {\r\n            text: \"Popularity (Asc)\",\r\n            key: \"timesSoldAsc\",\r\n            criteria: \"timesSold\",\r\n            direction: \"Asc\"\r\n        },\r\n        {\r\n            text: \"Price (Desc)\",\r\n            key: \"priceDesc\",\r\n            criteria: \"price\",\r\n            direction: \"Desc\"\r\n        },\r\n        {\r\n            text: \"Price (Asc)\",\r\n            key: \"priceAsc\",\r\n            criteria: \"price\",\r\n            direction: \"Asc\"\r\n        },\r\n    ]\r\n\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [selectedOption, setSelectedOption] = useState(\"\");\r\n    // const [selectedOption, setSelectedOption] = useState(selectListItems[0].text);\r\n\r\n    let [sortCriteria, setSortCriteria] = useState(sortContext.sortState.sort.criteria);\r\n    let [sortDirection, setSortDirection] = useState(sortContext.sortState.sort.direction);\r\n\r\n    const getSelectedItem = (clickedItem: HTMLLIElement | string): ISelectItem => {\r\n        let selectedItem: ISelectItem;\r\n        if (typeof clickedItem === 'string') {\r\n            selectedItem = selectListItems.filter((item) => {\r\n                return item.key === clickedItem;\r\n            })[0];\r\n        } else {\r\n            selectedItem = selectListItems.filter((item) => {\r\n                return item.key === clickedItem.getAttribute(\"item-key\");\r\n            })[0];\r\n        }\r\n        return selectedItem;\r\n    }\r\n\r\n    const sortProductList = () => {\r\n        productItems.sort((p1, p2) => {\r\n            if (sortDirection === \"Desc\") {\r\n                return +p2[sortCriteria as keyof IProductItem] - +p1[sortCriteria as keyof IProductItem]\r\n            } else {\r\n                return +p1[sortCriteria as keyof IProductItem] - +p2[sortCriteria as keyof IProductItem]\r\n            }\r\n        });\r\n    }\r\n    sortProductList();\r\n\r\n    const toggleOpen = () => {\r\n        setIsOpen(!isOpen);\r\n    }\r\n\r\n    const onLoad = () => {\r\n        const localStorageSortData: ISortState = JSON.parse(localStorage.getItem('tsSortData')!);\r\n\r\n        if (localStorageSortData) {\r\n            // console.log(localStorageSortData);\r\n            sortContext.sortDispatch({\r\n                type: \"LOAD_SORT_FROM_STORAGE\",\r\n                payload: {\r\n                    ...localStorageSortData\r\n                }\r\n            });\r\n            setSortCriteria(sortContext.sortState.sort.criteria);\r\n            setSortDirection(sortContext.sortState.sort.direction);\r\n\r\n            const selectedOption = getSelectedItem(`${sortCriteria}${sortDirection}`);\r\n            if (selectedOption) {\r\n                setSelectedOption(selectedOption.text);\r\n            }\r\n        }\r\n\r\n        sortProductList();\r\n    }\r\n\r\n    // useEffect(() => {\r\n    //     sortProductList()\r\n    // }, [sortContext, sortProductList]);\r\n\r\n    const onSelectChange = (evt: React.SyntheticEvent<HTMLLIElement>) => {\r\n        const clickedItem = evt.currentTarget.lastChild as HTMLLIElement;\r\n        setSelectedOption(clickedItem.innerText);\r\n        setIsOpen(false);\r\n\r\n        const selectedItem = getSelectedItem(clickedItem);\r\n\r\n        sortContext.sortDispatch({\r\n            type: 'SORT',\r\n            payload: {\r\n                sort: { ...selectedItem }\r\n            }\r\n        });\r\n\r\n        setSortCriteria(selectedItem.criteria);\r\n        setSortDirection(selectedItem.direction);\r\n\r\n        sortProductList();\r\n    };\r\n\r\n    return (\r\n        <ProductListWrapper>\r\n            <h1 className=\"list-title\">Our Products</h1>\r\n\r\n            <span className=\"sort-select-container\">\r\n                <h6 className={`sort-select-header ${isOpen ? \"opened\" : \"\"}`} onClick={toggleOpen}>Sort by: {selectedOption}</h6>\r\n                {\r\n                    isOpen &&\r\n                    <Select\r\n                        // className=\"\"\r\n                        selectListClassName=\"sort-select-list\"\r\n                        selectItemClassName=\"sort-select-item\"\r\n                        selectListItems={selectListItems}\r\n                        onSelectChange={onSelectChange}\r\n                        selectedOption={selectedOption}\r\n                    />\r\n                }\r\n            </span>\r\n            <div className=\"product-list\" onLoad={onLoad}>\r\n                {\r\n                    productItems.map((product => {\r\n                        return <ProductCard key={product.id} productItem={product} />\r\n                    }))\r\n                }\r\n            </div>\r\n        </ProductListWrapper>\r\n    );\r\n}\r\n\r\nexport default ProductList;","import styled from 'styled-components';\r\n\r\nimport { COLORS, DEVICE_MAX_WIDTH, SHADOWS } from './../../utils/styles/Constants';\r\n\r\nconst ProductItemWrapper = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: space-between;        \r\n\r\n    .manufacturer {\r\n        flex-basis: 100%;\r\n        margin-bottom: 1em;\r\n    }\r\n\r\n    .images{\r\n        flex: 0 0 30%;\r\n        \r\n        @media ${DEVICE_MAX_WIDTH.mobileL}{\r\n            flex: 0 0 100%;\r\n        }\r\n\r\n        img{\r\n            width: 100%;\r\n            height: auto;\r\n        }\r\n    }\r\n\r\n    .image-main img{\r\n        box-shadow: ${SHADOWS.shadowShapeMain} ${SHADOWS.shadowColorLight}\r\n    }\r\n\r\n    .image-thumbs{\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n\r\n        .image-label{\r\n            width: 23.5%;\r\n            margin: 1em 0;\r\n            margin-right: 2%;\r\n\r\n            &:nth-child(4n){\r\n                margin-right: 0;\r\n            }\r\n        }\r\n\r\n        .image-radio{\r\n            display: none;\r\n        }\r\n\r\n        .image-placeholder{\r\n            padding-top: 0.2em;\r\n            overflow: hidden;\r\n\r\n            &:hover{\r\n                outline: 2px solid ${COLORS.outlineAlternative}\r\n            }\r\n        }\r\n\r\n        .image-radio:checked+.image-placeholder{\r\n            outline: 2px solid ${COLORS.outlineBorderMain}\r\n        }\r\n    }\r\n\r\n    .image-thumb{\r\n        img{\r\n            width: 100%;\r\n            transition: transform .2s ease;\r\n        }\r\n\r\n        &:hover img{\r\n            transform: scale(1.1);\r\n        }\r\n    }\r\n\r\n    .wrapper{\r\n        flex: 0 0 65%;\r\n        display: flex;\r\n        flex-direction: column;\r\n\r\n        @media ${DEVICE_MAX_WIDTH.mobileL}{\r\n            flex: 0 0 100%;\r\n        }\r\n    }\r\n\r\n    .info-wrapper{\r\n        h4 {\r\n            width: fit-content;\r\n            padding: 0.5em 1em;\r\n            color: ${COLORS.main_Text_Reversed};\r\n            background-color: ${COLORS.main_Background_Highlighted};\r\n        }\r\n    }\r\n\r\n    .qty-wrapper {\r\n        margin: 0;\r\n        width: 100%;\r\n        display: flex;\r\n        justify-content: space-between;\r\n\r\n        .product-item-qty{\r\n        }\r\n\r\n        .qty-number{\r\n            width: 2.5em;\r\n        }\r\n    }\r\n`;\r\n\r\nexport default ProductItemWrapper;","\r\nimport Image from './../../common/Image/Image';\r\n\r\ntype Props = {\r\n    productItemName: string,\r\n    images: string[],\r\n    handleImageThumbClick(image: string): void\r\n}\r\n\r\nconst ImageThumbs: React.FC<Props> = ({ productItemName, images, handleImageThumbClick }) => {\r\n\r\n    return (\r\n        <span className=\"image-thumbs\">\r\n            {\r\n                images.map((image, index) => {\r\n                    return <label key={image} className=\"image-label\">\r\n                        {\r\n                            (index === 0) ? (\r\n                                <input className=\"image-radio\" type=\"radio\" name=\"image-radio\" id={image} defaultChecked />\r\n                            ) : (\r\n                                <input className=\"image-radio\" type=\"radio\" name=\"image-radio\" id={image} />\r\n                            )\r\n                        }\r\n                        <div className=\"image-placeholder\" onClick={() => handleImageThumbClick(image)} >\r\n                            <Image image={image} imageClass=\"image-thumb\" productItemName={productItemName} />\r\n                        </div>\r\n\r\n                    </label>\r\n                })\r\n            }\r\n        </span>\r\n    );\r\n}\r\n\r\nexport default ImageThumbs;","import styled from 'styled-components';\r\nimport { CONTENT_WIDTHS, DEVICE_MAX_WIDTH, COLORS } from '../../utils/styles/Constants';\r\n\r\nconst SizeWrapper = styled.div`\r\n    /* padding: 1em 0; */\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: space-between;\r\n\r\n    .size-list-title{\r\n        flex-basis: 100%;\r\n        margin-top: 1em;\r\n    }\r\n\r\n    .size-label-list{\r\n        display: flex;\r\n        width: 100%;\r\n    }\r\n\r\n    @media ${DEVICE_MAX_WIDTH.laptopM}{\r\n        .size-label-list{\r\n            width: 90%;\r\n        }\r\n    }\r\n\r\n    @media ${DEVICE_MAX_WIDTH.tablet}{\r\n        .size-label-list{\r\n            width: 100%;\r\n        }\r\n    }\r\n\r\n    .size-label {\r\n        flex-basis: 10%;\r\n        padding: 0.8em;\r\n        margin-right: 2%;\r\n        outline: 2px solid ${COLORS.outlineBorderMain};\r\n        text-align: center;\r\n\r\n        &:last-child {\r\n            margin-right: auto;\r\n        }\r\n\r\n        .size-radio {\r\n            display: none;\r\n        }\r\n\r\n        .size-item {\r\n            font-weight: bold;\r\n        }\r\n\r\n        &:hover {\r\n            color: #f0f0f0;\r\n            background: ${COLORS.main_Text_Default_Alpha};\r\n            cursor: pointer;\r\n        }\r\n\r\n        &.selected {\r\n            color: #f0f0f0;\r\n            background: ${COLORS.main_Text_Default}\r\n        }\r\n    }\r\n\r\n    #size-warning {\r\n        visibility: hidden;\r\n        padding: 0.5em 1em;\r\n        margin: 1em 0;\r\n        user-select: none;\r\n\r\n        &.visible {\r\n            visibility: visible;\r\n            font-weight: bold;\r\n            color: ${COLORS.main_Text_Reversed};\r\n            background: ${COLORS.main_Background_Highlighted};\r\n        }\r\n    }\r\n`;\r\n\r\nexport default SizeWrapper;","\r\nimport SizeWrapper from './Size.styles';\r\n\r\ntype Props = {\r\n    sizes: string[];\r\n    handleSizeSelection(size: string): void;\r\n}\r\n\r\nconst Size: React.FC<Props> = ({ sizes, handleSizeSelection }) => {\r\n    return <SizeWrapper>\r\n        <h6 className=\"size-list-title\">This product is available in:</h6>\r\n        <div className=\"size-label-list\">\r\n            {\r\n                sizes.map((size) => {\r\n                    return <label htmlFor=\"size-radio\" key={size} className=\"size-label\" id={size} onClick={() => handleSizeSelection(size)}>\r\n                        <input className=\"size-radio\" name=\"size-radio\"></input>\r\n                        <span className=\"size-item\">{size}</span>\r\n                    </label>\r\n                })\r\n            }\r\n        </div>\r\n        <div id=\"size-warning\">Please select a size!</div>\r\n    </SizeWrapper>\r\n}\r\n\r\nexport default Size;","import styled from 'styled-components';\r\nimport { COLORS, TIMES } from '../../../utils/styles/Constants';\r\n\r\nconst ButtonWrapper = styled.button.attrs((props) => ({\r\n    className: props.className,\r\n    onClick: props.onClick,\r\n    disabled: props.disabled\r\n}))`\r\n    &.form-button{\r\n        display: block;\r\n        padding: 0.5em;\r\n        outline: none   ;\r\n        border: 2px solid ${COLORS.borderMain};\r\n        color: ${COLORS.main_Text_Default};\r\n        background-color: ${COLORS.main_Background_Main};\r\n        font-size: 1em;\r\n        font-weight: bold;\r\n        transition: color ${TIMES.timeTransitionMain}, background-color ${TIMES.timeTransitionMain}; \r\n\r\n        &:hover{\r\n            color: ${COLORS.main_Text_Reversed};\r\n            background-color: ${COLORS.main_Background_Reversed};\r\n            cursor: pointer;\r\n        }\r\n\r\n        &.increment, &.decrement{\r\n            /* border: none; */\r\n            padding: 0.3em;\r\n            margin: 0;\r\n            font-size: 0.8em;\r\n            background: none;\r\n            color: ${COLORS.ButtonDefault};\r\n\r\n                &:hover{\r\n                    background: ${COLORS.ButtonDefault};\r\n                    color: white;\r\n                }\r\n\r\n                &:disabled{\r\n                    color: ${COLORS.ButtonDisabled_Alpha50};\r\n                    border-color: ${COLORS.ButtonDisabled_Alpha50};\r\n\r\n                    &:hover{\r\n                        cursor: default;\r\n                        background: none;\r\n                    }\r\n                }\r\n        }\r\n\r\n        &.increment:before, &.decrement:before{\r\n            font-family: 'Font Awesome 5 Free';\r\n            display: block;\r\n        }\r\n\r\n        &.increment:before:hover, &.decrement:before:hover{\r\n            color: purple;\r\n        }\r\n\r\n        &.increment:before{\r\n            content: '\\f067';\r\n        }\r\n\r\n        &.decrement:before{\r\n            content: '\\f068';\r\n        }\r\n    \r\n        &.btn-delete{\r\n            margin-top: 0.5em;\r\n            margin-left: 6em;\r\n            &:before{\r\n                padding-right: 0.5em;\r\n                content: '\\f2ed';\r\n                font-family: 'Font Awesome 5 Free';\r\n                font-weight: normal;\r\n            }\r\n        }\r\n\r\n        &.btn-cart{\r\n            width: 100%;\r\n            &:before{\r\n                padding-right: 0.5em;\r\n                content: '\\f788';\r\n                font-family: 'Font Awesome 5 Free';\r\n            }            \r\n        }\r\n    }\r\n`;\r\n\r\nexport default ButtonWrapper;","import ButtonWrapper from './Button.styles';\r\n\r\ntype Props = {\r\n    dataTestId: string;\r\n    isDisabled: boolean;\r\n    className: string;\r\n    onClick: React.MouseEventHandler<HTMLButtonElement>;\r\n    btnText: string;\r\n    btnIcon: string;\r\n}\r\n\r\nconst Button: React.FC<Props> = ({ dataTestId = \"\", isDisabled, className, onClick, btnText, btnIcon = \"\" }) => {\r\n    return <ButtonWrapper\r\n        data-testid={dataTestId}\r\n        disabled={isDisabled}\r\n        className={className}\r\n        onClick={onClick}\r\n    // btnIcon={btnIcon}\r\n    // btnText={btnText}\r\n    >\r\n        {/* <button\r\n            data-testid={dataTestId}\r\n            disabled={isDisabled}\r\n            className={className}\r\n            onClick={onClick}\r\n        >\r\n    </button> */}\r\n        {btnIcon}{btnText}\r\n    </ButtonWrapper>\r\n}\r\n\r\nexport default Button;","import styled from 'styled-components';\r\n\r\n// import { COLORS } from './../../../utils/styles/Constants';\r\n\r\nconst QuantityWrapper = styled.span.attrs((props) => ({\r\n    className: props.className\r\n}))`\r\n    display: flex;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n\r\n    .qty-number {\r\n        /* width: 1.5em; */\r\n        font-size: 1.5em;\r\n        font-weight: bold;\r\n        text-align: center;\r\n        user-select: none;\r\n    }\r\n`;\r\n\r\nexport default QuantityWrapper;","import Button from './../Button/Button';\r\n// import IProductItem from './../../../utils/interfaces/IProductItem';\r\n// import ProductItem from './../../ProductItem/ProductItem';\r\nimport IQuantityProps from './../../../utils/interfaces/Props/IQuantityProps';\r\nimport QuantityWrapper from './Quantity.styles';\r\n\r\nconst Quantity: React.FC<IQuantityProps> = ({ className, productItem, productQty, handleDecrement, handleIncrement }) => {\r\n    let qty;\r\n    if (productItem) {\r\n        qty = productItem.productQty;\r\n    } else {\r\n        qty = productQty;\r\n    }\r\n\r\n    return <QuantityWrapper className={className}>\r\n        {\r\n            qty === 1 ? (\r\n                <Button\r\n                    dataTestId={\"decr\"}\r\n                    isDisabled={true}\r\n                    className=\"form-button decrement\"\r\n                    onClick={handleDecrement}\r\n                    btnText={\"\"}\r\n                    btnIcon=\"\" />\r\n            ) : (\r\n                <Button\r\n                    dataTestId={\"decr\"}\r\n                    isDisabled={false}\r\n                    className=\"form-button decrement\"\r\n                    onClick={handleDecrement}\r\n                    btnText={\"\"}\r\n                    btnIcon=\"\" />\r\n            )\r\n        }\r\n        <span className=\"qty-number\">{qty}</span>\r\n        <Button\r\n            dataTestId={\"incr\"}\r\n            isDisabled={false}\r\n            className=\"form-button increment\"\r\n            onClick={handleIncrement}\r\n            btnText={\"\"}\r\n            btnIcon=\"\" />\r\n    </QuantityWrapper>;\r\n}\r\n\r\nexport default Quantity;","import * as toastr from 'toastr';\r\nimport IToastOptions from './interfaces/IToastrOptions';\r\n\r\nimport './../../node_modules/toastr/build/toastr.css';\r\n\r\nconst toastOptions: IToastOptions = {\r\n    closeButton: true,\r\n    newestOnTop: false,\r\n    timeOut: 1000,\r\n    progressBar: true,\r\n    // positionClass: \"toast-top-right\",\r\n}\r\n\r\n// type toastData = {\r\n//     title: string,\r\n//     message: string\r\n// }\r\n\r\nconst showToast = (toastType: string, toastData: { title: string, message: string }) => {\r\n    toastr.remove();\r\n\r\n    if (toastType === 'success') {\r\n        toastr[toastType](toastData.message, toastData.title, toastOptions);\r\n    }\r\n\r\n    if (toastType === 'simpleError') {\r\n        toastr['error'](toastData.message, toastData.title, toastOptions);\r\n        return;\r\n    }\r\n\r\n    //TODO!!!\r\n    // Object.keys(toastData).forEach((key) => {\r\n    //     if (toastData[].length > 0) {\r\n    //         toastr[toastType](toastData[key].join('\\n'), `Invalid ${key}`, toastOptions);\r\n    //     }\r\n    // });\r\n}\r\n\r\nexport default showToast;","import db from './../../utils/db.json';\r\n\r\nimport { useContext, useState } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\n\r\n// import { ProductItemType } from './../../utils/types/types';\r\n\r\nimport ProductItemWrapper from './ProductItem.styles';\r\nimport Image from './../common/Image/Image';\r\nimport ImageThumbs from './ImageThumbs/ImageThumbs';\r\nimport Size from './../Size/Size';\r\nimport Quantity from './../common/Quantity/Quantity';\r\nimport Button from './../common/Button/Button';\r\nimport showToast from './../../utils/toastr';\r\n// import { initialCartState, cartReducer } from '../../reducers/CartReducer';\r\nimport IProductItem from './../../utils/interfaces/IProductItem';\r\n// import ICardItem from './../../utils/interfaces/ICardItem';\r\n\r\nimport CartContext from '../../contexts/CartContext';\r\n\r\ntype Props = {\r\n    id: string;\r\n}\r\n\r\nconst ProductItem = ({ match }: RouteComponentProps<Props>) => {\r\n\r\n    const cartContext = useContext(CartContext);\r\n\r\n    const { id } = match.params;\r\n\r\n    const productItem: IProductItem = db.products.filter((targetProduct) => {\r\n        return targetProduct.id === +id;\r\n    })[0];\r\n\r\n    let [productSize, setProductSize] = useState(\"\");\r\n    const handleSizeSelection = (size: string) => {\r\n        setProductSize(size);\r\n        document.getElementById('size-warning')?.classList.remove('visible');\r\n        Array.from(document.getElementsByClassName('size-label')).map(elem => elem.classList.remove('selected'))\r\n        document.getElementById(`${size}`)?.classList.add('selected');\r\n    }\r\n\r\n    let [imageToShow, setImageToShow] = useState(productItem.images[0]);\r\n    const handleImageThumbClick = (image: string) => {\r\n        setImageToShow(image);\r\n    }\r\n\r\n    let [productQty, setProductQty] = useState(1);\r\n\r\n    const handleDecrement = () => {\r\n        if (productQty > 1) {\r\n            productQty -= 1;\r\n            setProductQty(productQty);\r\n        }\r\n    }\r\n\r\n    const handleIncrement = () => {\r\n        productQty += 1;\r\n        setProductQty(productQty);\r\n    }\r\n\r\n    const handleAddToCartClick = () => {\r\n        if (!productSize) {\r\n            document.getElementById('size-warning')?.classList.add('visible');\r\n            showToast('simpleError', {\r\n                title: \"Please select a size!\",\r\n                message: \"\"\r\n            });\r\n            return;\r\n        }\r\n\r\n        showToast('success', {\r\n            title: `${productItem.name} added successfully to your cart.`,\r\n            message: \"\"\r\n        });\r\n\r\n        cartContext.cartDispatch({\r\n            type: 'ADD_TO_CART',\r\n            payload: {\r\n                ...productItem,\r\n                productQty,\r\n                productSize,\r\n                productTotalPrice: 0\r\n            }\r\n        });\r\n    }\r\n\r\n    return <ProductItemWrapper>\r\n        <h3 className=\"manufacturer\">{productItem.manufacturer}</h3>\r\n        <span className=\"images\">\r\n            <Image image={imageToShow} imageClass=\"image-main\" productItemName={productItem.name} />\r\n            <ImageThumbs productItemName={productItem.name} images={productItem.images} handleImageThumbClick={handleImageThumbClick}></ImageThumbs>\r\n        </span>\r\n        <span className=\"wrapper\">\r\n            <span className=\"info-wrapper\">\r\n                <h5>{productItem.name}</h5>\r\n                <h4>{productItem.price} DKK</h4>\r\n                <h6>Description</h6>\r\n                <p>{productItem.description}</p>\r\n                <Size sizes={productItem.sizes} handleSizeSelection={handleSizeSelection} />\r\n            </span>\r\n            <span className=\"qty-wrapper\">\r\n                <Quantity\r\n                    className=\"product-item-qty\"\r\n                    productItem={{ ...productItem, productQty }}\r\n                    productQty={productQty}\r\n                    handleDecrement={handleDecrement}\r\n                    handleIncrement={handleIncrement} />\r\n                <Button\r\n                    isDisabled={false}\r\n                    className=\"form-button product-item-btn\"\r\n                    btnText=\"Add to cart\"\r\n                    onClick={handleAddToCartClick}\r\n                    dataTestId=\"\" btnIcon=\"\" />\r\n            </span>\r\n        </span>\r\n    </ProductItemWrapper>\r\n}\r\n\r\nexport default ProductItem;","import { createGlobalStyle } from 'styled-components';\r\n\r\n// import { COLORS, FONTS, DEVICE_MIN_WIDTH } from './Constants';\r\nimport { FONTS, DEVICE_MIN_WIDTH } from './Constants';\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n    //Resets browser's default styles\r\n    html {\r\n        box-sizing: border-box;\r\n    }\r\n    \r\n    * {\r\n        box-sizing: inherit;\r\n    }\r\n\r\n    *,\r\n    *::before,\r\n    *::after {\r\n        margin: 0;\r\n        padding: 0;\r\n    }\r\n    \r\n\r\n    //Typography\r\n    html {\r\n        font-family: ${FONTS.fontFamilyBody};\r\n        font-size: ${FONTS.fontSizeBodyNormal};\r\n    }\r\n\r\n    @media ${DEVICE_MIN_WIDTH.tablet} {\r\n        html {\r\n            font-size: ${FONTS.fontSizeBodyLarge};\r\n        }\r\n    }\r\n\r\n    @media ${DEVICE_MIN_WIDTH.laptopS} {\r\n        html {\r\n            font-size: ${FONTS.fontSizeBodyLARGE};\r\n        }\r\n    }\r\n\r\n    @media ${DEVICE_MIN_WIDTH.desktopS} {\r\n        html {\r\n            font-size: ${FONTS.fontSizeBodyHuge};\r\n        }\r\n    }\r\n\r\n    body,\r\n    select,\r\n    option {\r\n        font: inherit;\r\n    }\r\n\r\n    h1,\r\n    h2,\r\n    h3,\r\n    h4,\r\n    h5,\r\n    h6 {\r\n        font-family: ${FONTS.fontFamilyHeaders};\r\n        font-weight: 500;\r\n        font-size: 1em;\r\n        margin-bottom: 0.5em;\r\n    }\r\n\r\n    h1 {\r\n    font-size: 2.8em;\r\n    }\r\n\r\n    h2 {\r\n        font-size: 2.4em;\r\n    }\r\n\r\n    h3 {\r\n        font-size: 2.0em;\r\n    }\r\n\r\n    h4 {\r\n        font-size: 1.7em;\r\n    }\r\n\r\n    h5 {\r\n        font-size: 1.4em;\r\n    }\r\n\r\n    h6 {\r\n        font-size: 1.2em;\r\n    }\r\n    \r\n    a {\r\n        text-decoration: none;\r\n    }\r\n\r\n`;","import styled from 'styled-components';\r\n\r\n// import { CONTENT_WIDTHS, COLORS, DEVICE_MAX_WIDTH, DEVICE_MIN_WIDTH } from '../../utils/styles/Constants';\r\nimport { CONTENT_WIDTHS, COLORS, DEVICE_MAX_WIDTH } from '../../utils/styles/Constants';\r\n\r\nexport const AppWrapper = styled.div`\r\n    min-height: 100vh;\r\n\r\n    header, footer{\r\n        color: ${COLORS.navigation_Text_Default};\r\n        background-color: ${COLORS.navigation_Background};\r\n    }\r\n\r\n    main{\r\n        min-height: calc(100vh - 14.5em);\r\n        color: ${COLORS.main_Text_Default};\r\n    }\r\n\r\n    .site-header,\r\n    .site-main,\r\n    .site-footer {\r\n        max-width: ${CONTENT_WIDTHS.mainContent_Width_Default};\r\n        margin: 0 auto;\r\n    }\r\n\r\n    @media ${DEVICE_MAX_WIDTH.laptopS}{        \r\n        .site-header,\r\n        .site-main,\r\n        .site-footer {\r\n            max-width: ${CONTENT_WIDTHS.mainContent_Width_Medium};\r\n        }\r\n    }\r\n\r\n    @media ${DEVICE_MAX_WIDTH.mobileL}{\r\n        .site-header,\r\n        .site-main,\r\n        .site-footer {\r\n            max-width: ${CONTENT_WIDTHS.mainContent_Width_Small};\r\n        }\r\n    }\r\n\r\n    header {\r\n        margin-bottom: 1em;\r\n    }\r\n\r\n    footer {\r\n        margin-top: 0.5em;\r\n    }\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nimport { COLORS, DEVICE_MAX_WIDTH } from './../../../utils/styles/Constants';\r\n\r\nconst ProductTableWrapper = styled.ul`\r\n    list-style: none;\r\n    padding: 0;\r\n    padding-bottom: 2em;\r\n\r\n    .cart-item{\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n        text-align: center;\r\n        padding-bottom: 1em;\r\n        margin-bottom: 1em;\r\n        border-bottom: 2px solid ${COLORS.outlineAlternative};\r\n\r\n        &.header{\r\n            font-weight: bold;\r\n            /* padding: 0;\r\n            margin: 0; */\r\n            \r\n            @media ${DEVICE_MAX_WIDTH.tablet}{\r\n                &{\r\n                    display: none;\r\n                }\r\n            }   \r\n        }\r\n\r\n        .cart-image img{\r\n            width: 6em;\r\n            height: auto;\r\n        }\r\n    }\r\n\r\n    .cart-item-title {\r\n        width: 50%;\r\n        text-align: left;\r\n        margin-bottom: 1em;\r\n\r\n        @media ${DEVICE_MAX_WIDTH.tablet}{\r\n            &{\r\n                flex-basis: 100%;\r\n            }\r\n        }\r\n\r\n        a{\r\n            display: flex;\r\n            align-items: center;\r\n            color: ${COLORS.main_Text_Default};\r\n\r\n            &:hover{\r\n                text-decoration: none;\r\n                color: ${COLORS.main_Background_Highlighted}\r\n            }\r\n        }\r\n\r\n        .title-info{\r\n            display: flex;\r\n            flex-direction: column;\r\n\r\n            .manufacturer,\r\n            .name,\r\n            .size{\r\n                font-weight: bold;\r\n            }\r\n\r\n            .name{\r\n                font-size: 1.2em;\r\n            }\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    .cart-item-sprice,\r\n    .cart-item-qty,\r\n    .cart-item-tprice {\r\n        width: 16%;\r\n    }\r\n\r\n    .cart-item-sprice{\r\n        text-align: center;\r\n    }\r\n\r\n    .cart-item-qty{\r\n        \r\n    }\r\n\r\n    .cart-item-tprice{\r\n        font-weight: bold;\r\n        font-size: 1.2em;\r\n    }\r\n`;\r\n\r\nexport default ProductTableWrapper;","const ProductTableHeader = () => {\r\n    return <li className=\"cart-item header\">\r\n        <span className=\"cart-item-title\">\r\n            Product detauls\r\n        </span>\r\n        <span className=\"cart-item-sprice\">\r\n            Unit price\r\n        </span>\r\n        <span className=\"cart-item-qty\">\r\n            Quantity\r\n        </span>\r\n        <span className=\"cart-item-tprice\">\r\n            Total price\r\n        </span>\r\n    </li>\r\n}\r\n\r\nexport default ProductTableHeader;","import { Link } from 'react-router-dom';\r\nimport ICartItem from './../../../utils/interfaces/ICartItem';\r\nimport Image from './../../common/Image/Image';\r\nimport Button from './../../common/Button/Button';\r\nimport ProductTableWrapper from './ProductTable.styles';\r\nimport Quantity from './../../common/Quantity/Quantity';\r\nimport ProductTableHeader from './ProductTableHeader/ProductTableHeader';\r\n// import { Fragment } from 'react';\r\n\r\ntype Props = {\r\n    cart: ICartItem[],\r\n    handleRemoveFromCart: (product: ICartItem) => void,\r\n    handleDecrement: (product: ICartItem) => void,\r\n    handleIncrement: (product: ICartItem) => void,\r\n}\r\n\r\nconst ProductTable: React.FC<Props> = ({ cart, handleRemoveFromCart, handleDecrement, handleIncrement }) => {\r\n\r\n    return <ProductTableWrapper>\r\n        <ProductTableHeader />\r\n        {\r\n            cart.map((cartItem) => {\r\n\r\n                const { productTotalPrice, productSize, ...clearedProduct } = cartItem;\r\n\r\n                return <li key={cartItem.id + cartItem.productSize} className=\"cart-item\">\r\n                    <span className=\"cart-item-title\">\r\n                        <Link to={`/products/${cartItem.id}`}>\r\n                            <Image\r\n                                image={cartItem.images[0]}\r\n                                imageClass=\"cart-image\"\r\n                                productItemName={cartItem.name}\r\n                            />\r\n                            <div className=\"title-info\">\r\n                                {/* <span>\r\n                                Manufacturer:{\" \"}\r\n                                    <span className=\"manufacturer\">\r\n                                        {cartItem.manufacturer}\r\n                                    </span>\r\n                                </span> */}\r\n                                <span>\r\n                                    {/* Product name: */}\r\n                                    <span className=\"name\"> {cartItem.name}\r\n                                    </span>\r\n                                </span>\r\n                                <span>\r\n                                    Size:{\" \"}\r\n                                    <span className=\"size\">\r\n                                        {cartItem.productSize}\r\n                                    </span>\r\n                                </span>\r\n                            </div>\r\n                        </Link>\r\n                        <Button\r\n                            dataTestId=\"buttonTestId\"\r\n                            isDisabled={false}\r\n                            className=\"form-button btn-delete product-table\"\r\n                            onClick={() => handleRemoveFromCart(cartItem)}\r\n                            btnIcon=\"\"\r\n                            btnText={\"Remove this product\"}\r\n                        ></Button>\r\n                    </span>\r\n                    <span className=\"cart-item-sprice\">\r\n                        {cartItem.price.toFixed(2)} DKK\r\n\t\t\t\t\t</span>\r\n                    <Quantity\r\n                        className=\"cart-item-qty\"\r\n                        productItem={clearedProduct}\r\n                        productQty={clearedProduct.productQty}\r\n                        handleDecrement={() => handleDecrement(cartItem)}\r\n                        handleIncrement={() => handleIncrement(cartItem)}\r\n                    />\r\n                    <span className=\"cart-item-tprice\">\r\n                        {cartItem.productTotalPrice.toFixed(2)} DKK\r\n\t\t\t\t\t</span>\r\n                </li>\r\n            })\r\n        }\r\n    </ProductTableWrapper >\r\n}\r\n\r\nexport default ProductTable;","import styled from 'styled-components';\r\n\r\nconst CartWrapper = styled.div`\r\n    .total-price-wrapper{\r\n\r\n        width: 40%;\r\n        margin-left: auto;\r\n        \r\n        h4{\r\n            display: flex;\r\n            justify-content: space-between;\r\n        }\r\n\r\n        .text {\r\n            font-weight: normal;\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n`;\r\n\r\nexport default CartWrapper;","import React, { Fragment, useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport CartContext from './../../contexts/CartContext';\r\nimport ProductTable from './ProductTable/ProductTable';\r\nimport CartWrapper from './Cart.styles';\r\nimport ICartItem from '../../utils/interfaces/ICartItem';\r\n// import ICardItem from './../../utils/interfaces/ICardItem';\r\nimport Button from './../common/Button/Button';\r\nimport ICartState from './../../utils/interfaces/ICartState';\r\n\r\nconst Cart = () => {\r\n    document.title = \"Compass Store | Cart\";\r\n\r\n    const cartContext = useContext(CartContext);\r\n\r\n    const calcCartTotalSum = (cart: ICartState) => {\r\n        const cartTotalPrice = cart.items.reduce((acc, curr) => {\r\n            return acc + curr.productTotalPrice;\r\n        }, 0);\r\n        return cartTotalPrice;\r\n    }\r\n\r\n    const handleRemoveFromCart = (product: ICartItem) => {\r\n        cartContext.cartDispatch({\r\n            type: \"REMOVE_FROM_CART\",\r\n            payload: product,\r\n        });\r\n    };\r\n\r\n    const handleDecrement = (product: ICartItem) => {\r\n        cartContext.cartDispatch({\r\n            type: \"DECREMENT\",\r\n            payload: product,\r\n        });\r\n    };\r\n\r\n    const handleIncrement = (product: ICartItem) => {\r\n        cartContext.cartDispatch({\r\n            type: \"INCREMENT\",\r\n            payload: product,\r\n        });\r\n    };\r\n\r\n    const handleCheckout = () => {\r\n        const dummyCartItem = {\r\n            id: 0,\r\n            manufacturer: \"\",\r\n            name: \"\",\r\n            description: \"\",\r\n            images: [],\r\n            sizes: [],\r\n            price: 0,\r\n            timesSold: 0,\r\n            productSize: \"\",\r\n            productQty: 0,\r\n            productTotalPrice: 0\r\n        }\r\n        cartContext.cartDispatch({\r\n            type: \"CHECKOUT\",\r\n            payload: dummyCartItem\r\n        });\r\n        // let totalPrice = 0;\r\n        // cart.map((product) => {\r\n        //     totalPrice += +product.totalPrice;\r\n        //     return totalPrice;\r\n        // });\r\n    };\r\n\r\n    return <CartWrapper>\r\n        {\r\n            cartContext.cartState.items.length === 0 ? (\r\n                <Fragment>\r\n                    <h1>Your cart is empty</h1>\r\n                    <Link to=\"/\">\r\n                        <h4>Start shopping</h4>\r\n                    </Link>\r\n                </Fragment>\r\n            ) : (\r\n                <Fragment>\r\n                    <h1>Your shopping cart</h1>\r\n                    <ProductTable cart={cartContext.cartState.items}\r\n                        handleRemoveFromCart={handleRemoveFromCart}\r\n                        handleDecrement={handleDecrement}\r\n                        handleIncrement={handleIncrement}\r\n                    />\r\n                    <div className=\"total-price-wrapper\">\r\n                        <h4>\r\n                            <span className=\"text\">Total Price: </span>\r\n                            <span className=\"price\">\r\n                                {calcCartTotalSum(cartContext.cartState).toFixed(2)} DKK\r\n\t\t\t\t\t\t\t</span>\r\n                        </h4>\r\n                        <Button\r\n                            dataTestId=\"123\"\r\n                            isDisabled={false}\r\n                            className=\"form-button btn-cart\"\r\n                            onClick={handleCheckout}\r\n                            btnIcon=\"\"\r\n                            btnText={\"Proceed to Checkout\"}\r\n                        />\r\n                    </div>\r\n                </Fragment>\r\n            )\r\n        }\r\n    </CartWrapper>\r\n}\r\n\r\nexport default Cart;","//Import external libraries\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\n//Import internal libraries\nimport { products } from './../../utils/db.json';\n\n//Import components\nimport Header from './../Header/Header';\nimport Footer from './../Footer/Footer';\nimport ProductList from \"./../ProductList/ProductList\";\nimport ProductItem from './../ProductItem/ProductItem';\n\nimport { CartContextProvider } from './../../contexts/CartContext';\nimport { cartReducer, initialCartState } from './../../reducers/CartReducer';\n\nimport { SortContextProvider } from './../../contexts/SortContext';\nimport { sortReducer, initialSortState } from './../../reducers/SortReducer';\n\n//Import styles\nimport { GlobalStyle } from './../../utils/styles/GlobalStyle';\n\nimport { AppWrapper } from './App.styles';\nimport { miscConstants } from '../../utils/miscConstants';\nimport { useReducer } from 'react';\nimport Cart from \"../Cart/Cart\";\n\nconst App = () => {\n\n\tconst [cartState, cartDispatch] = useReducer(cartReducer, initialCartState);\n\tconst [sortState, sortDispatch] = useReducer(sortReducer, initialSortState);\n\n\tconst cartContextValues = {\n\t\tcartState,\n\t\tcartDispatch\n\t}\n\n\tconst sortContextValues = {\n\t\tsortState,\n\t\tsortDispatch\n\t}\n\n\treturn (\n\t\t<CartContextProvider value={cartContextValues}>\n\t\t\t<SortContextProvider value={sortContextValues}>\n\t\t\t\t<Router>\n\t\t\t\t\t<GlobalStyle />\n\t\t\t\t\t<AppWrapper>\n\n\t\t\t\t\t\t<Header />\n\n\t\t\t\t\t\t<main className='site-main'>\n\t\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\t\texact\n\t\t\t\t\t\t\t\t\t// path={\"/\"}\n\t\t\t\t\t\t\t\t\tpath={`${miscConstants.baseUrl}`}\n\t\t\t\t\t\t\t\t\trender={() => (<ProductList productItems={products} />)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\t\texact\n\t\t\t\t\t\t\t\t\t// path={\"/products/:id\"}\n\t\t\t\t\t\t\t\t\tpath={`${miscConstants.baseUrl}/products/:id`}\n\t\t\t\t\t\t\t\t\tcomponent={ProductItem}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\t\texact\n\t\t\t\t\t\t\t\t\t// path={\"/cart\"}\n\t\t\t\t\t\t\t\t\tpath={`${miscConstants.baseUrl}/cart`}\n\t\t\t\t\t\t\t\t\tcomponent={Cart}\n\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t</Switch>\n\t\t\t\t\t\t</main>\n\n\t\t\t\t\t\t<Footer />\n\t\t\t\t\t</AppWrapper>\n\t\t\t\t</Router>\n\t\t\t</SortContextProvider>\n\t\t</CartContextProvider>\n\t);\n\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './components/App/App';\n\nimport { QueryClient, QueryClientProvider } from 'react-query';\n\nconst client = new QueryClient();\n\nReactDOM.render(\n    <QueryClientProvider client={client}>\n        <App />\n    </QueryClientProvider>,\n    document.getElementById('root')\n);"],"sourceRoot":""}